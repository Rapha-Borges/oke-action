name: Destroy OKE
on:
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Destroy OKE Cluster
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: 'Write Config & Key Files'
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
          echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
          echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
          echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config
          echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
        
      - name: 'Install OCI CLI'
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults
          echo "/home/runner/bin" >> $GITHUB_PATH
          exec -l $SHELL

      - name: 'Fix OCI Config File Permissions'
        run: |
          oci setup repair-file-permissions --file /home/runner/.oci/config
          oci setup repair-file-permissions --file /home/runner/.oci/key.pem
      
      - name: 'Download TF State'
        continue-on-error: true
        run: |
          wget "${{secrets.TF_BUCKET}}"
    
      - name: 'Terraform Setup'
        uses: hashicorp/setup-terraform@v3

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Destroy'
        run: terraform destroy -auto-approve
        continue-on-error: true
        env:
          TF_VAR_tenancy_ocid: ${{secrets.OCI_TENANCY_OCID}}
          TF_VAR_region: ${{secrets.OCI_REGION}}
          TF_VAR_user_ocid: ${{secrets.OCI_USER_OCID}}
          TF_VAR_fingerprint: ${{secrets.OCI_FINGERPRINT}}
          TF_VAR_private_key_path: ${{secrets.OCI_KEY_FILE}}
          TF_VAR_ssh_public_key: ${{secrets.SSH_PUBLIC_KEY}}

      - name: 'Update tfstate'
        if: always()
        run: |
          echo "Updating tfstate"
          curl -X PUT -H "Content-Type: application/json" --data-binary @terraform.tfstate "${{secrets.TF_BUCKET}}" 
